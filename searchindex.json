{"categories":[{"title":"測試","uri":"https://wmhan.github.io/categories/%E6%B8%AC%E8%A9%A6/"},{"title":"開發","uri":"https://wmhan.github.io/categories/%E9%96%8B%E7%99%BC/"}],"posts":[{"content":"比較靜態測試與動態測試 軟體能動，只要執行它其實是比較容易發現問題! 但是所需付出的修復成本卻是最大!\n看看之前eMask口罩預購系統，無論是在WEB或APP端，大家都很勤勞的使用(事實上是進行動態測試)，然後反映它的慢或是容易閃退等問題，民眾抱怨讓整體政策美意打了折扣，如果今天角色是廠商，則是會耗損商譽!軟體等到能動才進行測試顯然不怎麼美好。\n與「動態測試」相反地是 「靜態測試」－ 在不執行程式碼的狀態下去評估瞭解工作產品的好壞\n如果我們把軟體開發限縮在四個基本活動(需求、分析、開發與測試)，將靜態測試應用於在需求與分析活動中，會某種程度地讓開發與測試活動的測試工作量降低，因為大部分的問題在撰寫程式碼前都可以儘早發現與修復。\n那開發與測試活動有需要進行靜態測試嗎?既然有了程式碼，執行程式碼搭配動態測試應該就可以了吧!讓我們想想。進行開發階段時，你應該起碼會有程式碼產生，對程式碼進行動態測試理所當然，那程式碼怎麼還要進行靜態測試，你可以想想希不希望瞭解程式碼的可讀性，會不會自己寫的程式碼，一個月過後就看不懂!或是你想要評估目前你的寫法容不容易重新再利用，如果你有以上的需求，你需要靜態測試!進行測試階段時，應該會有測試計劃或測試案例吧!測試計畫就像一個地圖，會告知團隊測試工作該如何進行，所以寫得完整且確切執行會讓你上天堂；寫得抽象且有遺漏會讓你有測跟沒測一樣，怎樣讓測試計畫變得美好，你需要靜態測試，同理，測試案例也是如此。事實上，靜態測試可以應用於軟體開發的各個階段，靜態測試與動態測試透過發現不一樣類型的缺陷來達到互補。\n靜態測試一般可以再劃分成2種\n 審查 : 人工為主，常聽到的是程式碼審查(Code review) 靜態分析 : 通常搭配工具自動化進行，例如分析程式碼複雜性等  最後，讓我回憶一下我的第一台車-小灰(Tiida) 當我在驗車時，我會看看烤漆、摸摸內裝、觀察輪胎，確定是不是跟規格相符，基本上, 我就是在做靜態測試, 雖然還沒有實際上路開這部車，憑著審查掌握這部車的好壞概況，如果都ok，才有繼續驗下去的必要性 接著，我當然要試開看看，加足馬力左轉右轉，看看車子操作是否有正確做出對應的動作，調調冷氣與出風口，體驗夠不夠涼 這一切都叫做動態測試－讓車子運作評估品質好壞\n","id":0,"section":"posts","summary":"比較靜態測試與動態測試 軟體能動，只要執行它其實是比較容易發現問題! 但是所需付出的修復成本卻是最大! 看看之前eMask口罩預購系統，無論是在W","tags":["TestLink","JaCoCo","SonarQube"],"title":"靜態測試的好也讓你知道","uri":"https://wmhan.github.io/2020/06/c_stdt/","year":"2020"},{"content":"記錄自己在VS Code上所使用的擴充套件   同步VS Code個人設定 Settings Sync\n安裝參考說明(黃書珊)\n  VS Code Settings Sync(上傳設定)\n  VS Code Settings Sync(下載設定)\n    使用介面繁體化 Chinese (Traditional) Language Pack for Visual Studio Code\n  支援Markdown(.md)標記語言 Better TOML\n  縮排顏色較美觀 indent-rainbow\n  ","id":1,"section":"posts","summary":"記錄自己在VS Code上所使用的擴充套件 同步VS Code個人設定 Settings Sync 安裝參考說明(黃書珊) VS Code Settings Sync(上傳設定) VS Code Settings Sync(下載設定","tags":["VS Code","JaCoCo","SonarQube"],"title":"VS Code 擴充套件","uri":"https://wmhan.github.io/2020/06/vs_code/","year":"2020"}],"tags":[{"title":"Index","uri":"https://wmhan.github.io/tags/index/"},{"title":"JaCoCo","uri":"https://wmhan.github.io/tags/jacoco/"},{"title":"SonarQube","uri":"https://wmhan.github.io/tags/sonarqube/"},{"title":"TestLink","uri":"https://wmhan.github.io/tags/testlink/"},{"title":"VS Code","uri":"https://wmhan.github.io/tags/vs-code/"}]}